apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-jobconfig
data:
  input.json: {{ .Values.calcWorkflowInput | quote }}
  params.yml: |
{{- range $key, $value := .Values.calcJobParams }}
    {{ $key }}: {{ $value }}
{{- end }}
  nxf.config: |
    workDir = {{ .Values.nxfParams.workBucketPath | quote }}

    process {
      executor = "google-batch"
      errorStrategy = "retry"
      maxRetries = 3
    
      // generated by seqera platform optimiser
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:APPLY_SCORE:PLINK2_SCORE' {
        cpus = { 2 * task.attempt }
        memory = { 8.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:APPLY_SCORE:SCORE_AGGREGATE' {
        cpus = { 1 * task.attempt }
        memory = { 1.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:DOWNLOAD_SCOREFILES' {
        cpus = { 1 * task.attempt }
        memory = { 1.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:DUMPSOFTWAREVERSIONS' {
        cpus = { 1 * task.attempt }
        memory = { 1.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:INPUT_CHECK:COMBINE_SCOREFILES' {
        cpus = { 1 * task.attempt }
        memory = { 2.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:MAKE_COMPATIBLE:PLINK2_RELABELPVAR' {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:MATCH:MATCH_COMBINE' {
        cpus = { 2 * task.attempt }
        memory = { 16.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:MATCH:MATCH_VARIANTS' {
        cpus = { 1 * task.attempt }
        memory = { 18.GB * task.attempt }
      }
      withName: 'PGSCATALOG_PGSCCALC:PGSCCALC:REPORT:SCORE_REPORT' {
        cpus = { 1 * task.attempt }
        memory = { 1.GB * task.attempt }
      }          
    }

    google {
      project = {{ .Values.nxfParams.gcpProject | quote }}
      location = {{ .Values.nxfParams.location | quote }}
      batch {
        spot = {{ .Values.nxfParams.spot }}
      }
    }

    wave {
      enabled = {{ .Values.nxfParams.wave }}
    }

    fusion {
      enabled =  {{ .Values.nxfParams.fusion }}
    }

    tower {
      accessToken = {{ .Values.secrets.towerToken | quote }}
      workspaceId = {{ .Values.secrets.towerId | quote }}
      enabled = true
    }
  scm: |
    providers {
      ebi {
        server = 'https://gitlab.ebi.ac.uk'
        platform = 'gitlab'
      }
    }
